// Mixins
@mixin aspect-ratio-viewport($height, $width) {
  position: relative;
  overflow: hidden;
  width: 100vw;
  height: calc(100vw * ($height/$width));

  > img,
  > video,
  > figure,
  > iframe {
    position: absolute;
    top: 0;
    left: -9999px;
    right: -9999px;
    bottom: 0;
    min-height: 100%;
    min-width: 100%;
    height: 100%;
    width: 100%;
    margin: auto; //center left, right
    object-fit: cover; //act like background-size: cover if supported
  }
}

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position=="vertical" {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -o-transform: translateY(-50%);
  }

  @else if $position=="horizontal" {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }

  @else if $position=="both" {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

//add ellipsis
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//mixins for font calculation
@mixin calcRem($size) {
  font-size: ($size / 16px) * 1rem;
}

@mixin background-gradient($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation=="vertical" {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  }

  @else if $orientation=="horizontal" {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  }

  @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

// fullscreen cover
@mixin cover {
  background-position: center center;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

//box-shadow
@mixin box-shadow($top, $left, $blur, $spread, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $spread $color;
    -moz-box-shadow: inset $top $left $blur $spread $color;
    box-shadow: inset $top $left $blur $spread $color;
  }

  @else {
    -webkit-box-shadow: $top $left $spread $blur $color;
    -moz-box-shadow: $top $left $spread $blur $color;
    box-shadow: $top $left $blur $spread $color;
  }
}

// border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

// transition
@mixin transition($param) {
  -webkit-transition: #{$param};
  -moz-transition: #{$param};
  -o-transition: #{$param};
  transition: #{$param};
}

//transform
@mixin transform($attr) {
  -ms-transform: $attr; // IE 9
  -webkit-transform: $attr; // Chrome, Safari, Opera
  transform: $attr;
}

// Filter
@mixin filter($attr) {
  filter: $attr;
  -webkit-filter: $attr;
  -moz-filter: $attr;
  -o-filter: $attr;
  -ms-filter: $attr;
}

// Animation
@mixin animation($attr) {
  -webkit-animation: $attr;
  -moz-animation: $attr;
  -o-animation: $attr;
  animation: $attr;
}

//Keyframe
@mixin keyframes($name) {
  @-webkit-keyframes $name {
    @content;
  }

  @-moz-keyframes $name {
    @content;
  }

  @-o-keyframes $name {
    @content;
  }

  @keyframes $name {
    @content;
  }
}

/* box shadow */
@mixin box-shadow ($bs) {
  -webkit-box-shadow: $bs;
  -moz-box-shadow: $bs;
  box-shadow: $bs;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin user-select ( $us ) {
  -webkit-user-select: $us;
  -moz-user-select: $us;
  -ms-user-select: $us;
}

@mixin box-sizing ( $bs ) {
  -webkit-box-sizing: $bs;
  -moz-box-sizing: $bs;
  box-sizing: $bs;
}

@mixin appearance ( $ap ) {
  -webkit-appearance: $ap;
  -moz-appearance: $ap;
  appearance: $ap;
}

/***************************************************************
* Media Queries
***************************************************************/
@mixin media-min($min) {
  @media screen and (min-width: #{ $min }) {
    @content;
  }
}

// parameter example: $screen-xs-min, $screen-xs-max
@mixin media-between($min, $max) {
  @media screen and (min-width: #{$min}) and (max-width: #{$max}) {
    @content;
  }
}

// parameter example: $screen-xs
@mixin media-max($max) {
  @media screen and (max-width: #{$max}) {
    @content;
  }
}
